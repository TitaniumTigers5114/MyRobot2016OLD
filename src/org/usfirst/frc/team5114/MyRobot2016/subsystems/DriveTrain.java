// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team5114.MyRobot2016.subsystems;

import java.awt.Robot;

import org.usfirst.frc.team5114.MyRobot2016.RobotMap;
import org.usfirst.frc.team5114.MyRobot2016.commands.*;

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon talon1 = RobotMap.driveTrainTalon1;
    private final CANTalon talon2 = RobotMap.driveTrainTalon2;
    private final CANTalon talon3 = RobotMap.driveTrainTalon3;
    private final CANTalon talon4 = RobotMap.driveTrainTalon4;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    private boolean dirFlip = false;
    
    public void flipDirection() {
    	dirFlip = !dirFlip;
    }
    
    public void joystickDrive(Joystick leftStick, Joystick rightStick)
    {
    	if (dirFlip)
    	{
    		// Direction is flipped, forward is backwards
    		
    		//Right side
    	    talon1.set(-0.5 * leftStick.getY());
    	    //talon2.set(-0.5 * leftStick.getY());
    	    
    	    //Left Side
    	    talon3.set(0.5 * rightStick.getY());
    	    //talon4.set(0.5 * rightStick.getY());
    	}
    	else
    	{
    		// Normal drive, forwards is forwards
    		
    		//Right side
    	    talon1.set(0.5 * rightStick.getY());
    	    //talon2.set(0.5 * rightStick.getY());
    	    
    	    //Left Side
    	    talon3.set(-0.5 * leftStick.getY());
    	    //talon4.set(-0.5 * leftStick.getY());
    	}
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new JoystickDrive());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}

